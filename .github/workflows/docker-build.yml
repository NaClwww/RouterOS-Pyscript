name: 构建并发布 Docker 镜像

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: routeros-pyscript
  REGISTRY: ghcr.io
  
jobs:
  build:
    name: 构建 Docker 镜像
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 登录到 Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 提取元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # 添加大小优化选项
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          outputs: type=image,name=${{ env.REGISTRY }}/${{ steps.vars.outputs.REPO_OWNER_LOWERCASE }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,compression=gzip,compress=true,push=${{ github.event_name != 'pull_request' }}


