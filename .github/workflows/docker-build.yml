name: 构建并发布 Docker 镜像

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: routeros-pyscript
  DOCKER_HUB_USERNAME: your-username  # 修改为你的Docker Hub用户名
  
jobs:
  build:
    name: 构建 Docker 镜像
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写权限来创建release
      packages: read

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 获取版本信息
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=$(date +%Y%m%d)-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi

      # 登录到 Docker Hub
      - name: 登录到 Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 构建并推送到 Docker Hub (仅在非PR时)
      - name: 构建并推送 Docker 镜像
        id: build_push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}  # 非PR时推送
          tags: |
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('{0}/{1}:latest',
            env.DOCKER_HUB_USERNAME, env.IMAGE_NAME) }}

      - name: 将镜像打包为tar文件
        run: |
          mkdir -p ./artifacts
          find ./docker-images -name '*.tar' -exec cp {} ./artifacts/ \;
          ls -la ./artifacts/

      - name: 创建Release (仅标签)
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            ./artifacts/*.tar
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 上传构建产物 (非标签)
        if: !startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: docker-images-${{ steps.get_version.outputs.VERSION }}
          path: ./artifacts/*.tar

      - name: 构建完成
        run: echo "构建完成"